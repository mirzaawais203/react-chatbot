{"version":3,"sources":["../source/PhoneInput.js"],"names":["React","PropTypes","usePhoneDigits","PhoneInput","ref","Component","country","defaultCountry","useNationalFormatForDefaultCountryValue","value","onChange","metadata","international","withCountryCallingCode","rest","phoneDigits","setPhoneDigits","forwardRef","propTypes","string","func","isRequired","bool","elementType","object","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,UAAT,OAWGC,GAXH,EAWQ;AAAA,MAVPC,SAUO,QAVPA,SAUO;AAAA,MATPC,OASO,QATPA,OASO;AAAA,MARPC,cAQO,QARPA,cAQO;AAAA,MAPPC,uCAOO,QAPPA,uCAOO;AAAA,MANPC,KAMO,QANPA,KAMO;AAAA,MALPC,QAKO,QALPA,QAKO;AAAA,MAJPC,QAIO,QAJPA,QAIO;AAAA,MAHPC,aAGO,QAHPA,aAGO;AAAA,MAFPC,sBAEO,QAFPA,sBAEO;AAAA,MADJC,IACI;;AACP;AADO,wBAKHZ,cAAc,CAAC;AAClBO,IAAAA,KAAK,EAALA,KADkB;AAElBC,IAAAA,QAAQ,EAARA,QAFkB;AAGlBJ,IAAAA,OAAO,EAAPA,OAHkB;AAIlBC,IAAAA,cAAc,EAAdA,cAJkB;AAKlBK,IAAAA,aAAa,EAAbA,aALkB;AAMlBC,IAAAA,sBAAsB,EAAtBA,sBANkB;AAOlBL,IAAAA,uCAAuC,EAAvCA,uCAPkB;AAQlBG,IAAAA,QAAQ,EAARA;AARkB,GAAD,CALX;AAAA;AAAA,MAGNI,WAHM;AAAA,MAINC,cAJM;;AAeP,SACC,oBAAC,SAAD,eACKF,IADL;AAEC,IAAA,GAAG,EAAEV,GAFN;AAGC,IAAA,QAAQ,EAAEO,QAHX;AAIC,IAAA,aAAa,EAAEC,aAJhB;AAKC,IAAA,sBAAsB,EAAEC,sBALzB;AAMC,IAAA,OAAO,EAAEP,OAAO,IAAIC,cANrB;AAOC,IAAA,KAAK,EAAEQ,WAPR;AAQC,IAAA,QAAQ,EAAEC;AARX,KADD;AAWA;;AAEDb,UAAU,GAAGH,KAAK,CAACiB,UAAN,CAAiBd,UAAjB,CAAb;AAEAA,UAAU,CAACe,SAAX,GAAuB;AACtB;;;;AAIAT,EAAAA,KAAK,EAAER,SAAS,CAACkB,MALK;;AAOtB;;;;AAIAT,EAAAA,QAAQ,EAAET,SAAS,CAACmB,IAAV,CAAeC,UAXH;;AAatB;;;;;;;;;;AAUAf,EAAAA,OAAO,EAAEL,SAAS,CAACkB,MAvBG;;AAyBtB;;;;;;;AAOAZ,EAAAA,cAAc,EAAEN,SAAS,CAACkB,MAhCJ;;AAkCtB;;;;;;;;;;AAUAP,EAAAA,aAAa,EAAEX,SAAS,CAACqB,IA5CH;;AA8CtB;;;;;;AAMAT,EAAAA,sBAAsB,EAAEZ,SAAS,CAACqB,IApDZ;;AAsDtB;;;;AAIAjB,EAAAA,SAAS,EAAEJ,SAAS,CAACsB,WAAV,CAAsBF,UA1DX;;AA4DtB;;;;;;AAMAb,EAAAA,uCAAuC,EAAEP,SAAS,CAACqB,IAAV,CAAeD,UAlElC;;AAoEtB;;;AAGAV,EAAAA,QAAQ,EAAEV,SAAS,CAACuB,MAAV,CAAiBH;AAvEL,CAAvB;AA0EAlB,UAAU,CAACsB,YAAX,GAA0B;AACzB;;;;AAIA;;AAEA;;;;AAIAjB,EAAAA,uCAAuC,EAAE;AAXhB,CAA1B;AAcA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport usePhoneDigits from './usePhoneDigits'\n\nfunction PhoneInput({\n\tComponent,\n\tcountry,\n\tdefaultCountry,\n\tuseNationalFormatForDefaultCountryValue,\n\tvalue,\n\tonChange,\n\tmetadata,\n\tinternational,\n\twithCountryCallingCode,\n\t...rest\n}, ref) {\n\t// \"Phone digits\" includes not only \"digits\" but also a `+` sign.\n\tconst [\n\t\tphoneDigits,\n\t\tsetPhoneDigits\n\t] = usePhoneDigits({\n\t\tvalue,\n\t\tonChange,\n\t\tcountry,\n\t\tdefaultCountry,\n\t\tinternational,\n\t\twithCountryCallingCode,\n\t\tuseNationalFormatForDefaultCountryValue,\n\t\tmetadata\n\t})\n\treturn (\n\t\t<Component\n\t\t\t{...rest}\n\t\t\tref={ref}\n\t\t\tmetadata={metadata}\n\t\t\tinternational={international}\n\t\t\twithCountryCallingCode={withCountryCallingCode}\n\t\t\tcountry={country || defaultCountry}\n\t\t\tvalue={phoneDigits}\n\t\t\tonChange={setPhoneDigits} />\n\t)\n}\n\nPhoneInput = React.forwardRef(PhoneInput)\n\nPhoneInput.propTypes = {\n\t/**\n\t * The phone number (in E.164 format).\n\t * Examples: `undefined`, `\"+12\"`, `\"+12133734253\"`.\n\t */\n\tvalue: PropTypes.string,\n\n\t/**\n\t * A function of `value: string?`.\n\t * Updates the `value` property.\n\t */\n\tonChange: PropTypes.func.isRequired,\n\n\t/**\n\t * A two-letter country code for formatting `value`\n\t * as a national phone number (example: `(213) 373-4253`),\n\t * or as an international phone number without \"country calling code\"\n\t * if `international` property is passed (example: `213 373 4253`).\n\t * Example: \"US\".\n\t * If no `country` is passed then `value`\n\t * is formatted as an international phone number.\n\t * (example: `+1 213 373 4253`)\n\t */\n\tcountry: PropTypes.string,\n\n\t/**\n\t * A two-letter country code for formatting `value`\n\t * when a user inputs a national phone number (example: `(213) 373-4253`).\n\t * The user can still input a phone number in international format.\n\t * Example: \"US\".\n\t * `country` and `defaultCountry` properties are mutually exclusive.\n\t */\n\tdefaultCountry: PropTypes.string,\n\n\t/**\n\t * If `country` property is passed along with `international={true}` property\n\t * then the phone number will be input in \"international\" format for that `country`\n\t * (without \"country calling code\").\n\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\n\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\n\t * But if both `country=\"US\"` and `international={true}` properties are passed then\n\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\n\t * (without \"country calling code\" `+1`).\n\t */\n\tinternational: PropTypes.bool,\n\n\t/**\n\t * If `country` and `international` properties are set,\n\t * then by default it won't include \"country calling code\" in the input field.\n\t * To change that, pass `withCountryCallingCode` property,\n\t * and it will include \"country calling code\" in the input field.\n\t */\n\twithCountryCallingCode: PropTypes.bool,\n\n\t/**\n\t * A component that renders the `<input/>` itself and also\n\t * parses and formats its `value` as the user inputs it.\n\t */\n\tComponent: PropTypes.elementType.isRequired,\n\n\t/**\n\t * When `defaultCountry` is defined and the initial `value` corresponds to `defaultCountry`,\n\t * then the `value` will be formatted as a national phone number by default.\n\t * To format the initial `value` of `defaultCountry` as an international number instead\n\t * set `useNationalFormatForDefaultCountryValue` property to `true`.\n\t */\n\tuseNationalFormatForDefaultCountryValue: PropTypes.bool.isRequired,\n\n\t/**\n\t * `libphonenumber-js` metadata.\n\t */\n\tmetadata: PropTypes.object.isRequired\n}\n\nPhoneInput.defaultProps = {\n\t/**\n\t * Set to `true` to force international phone number format\n\t * (without \"country calling code\") when `country` is specified.\n\t */\n\t// international: false,\n\n\t/**\n\t * Prefer national format when formatting E.164 phone number `value`\n\t * corresponding to `defaultCountry`.\n\t */\n\tuseNationalFormatForDefaultCountryValue: true\n}\n\nexport default PhoneInput"],"file":"PhoneInput.js"}