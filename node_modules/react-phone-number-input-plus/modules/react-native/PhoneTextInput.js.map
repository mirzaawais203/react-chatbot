{"version":3,"sources":["../../source/react-native/PhoneTextInput.js"],"names":["React","useCallback","PropTypes","TextInput","PhoneTextInput","ref","TextInputComponent","onChange","rest","onChangeText","value","preventDefault","defaultPrevented","target","forwardRef","propTypes","string","func","isRequired","autoCompleteType","elementType","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA;;;;;AAIA,SAASC,cAAT,OAIGC,GAJH,EAIQ;AAAA,MAHNC,kBAGM,QAHNA,kBAGM;AAAA,MAFNC,QAEM,QAFNA,QAEM;AAAA,MADHC,IACG;;AACN;AACA;AACA,MAAMC,YAAY,GAAGR,WAAW,CAAC,UAACS,KAAD,EAAW;AAC1CH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,cADO,4BACU;AAAE,aAAKC,gBAAL,GAAwB,IAAxB;AAA8B,OAD1C;AAEPC,MAAAA,MAAM,EAAE;AAAEH,QAAAA,KAAK,EAALA;AAAF;AAFD,KAAD,CAAR;AAID,GAL+B,EAK7B,CAACH,QAAD,CAL6B,CAAhC,CAHM,CAUN;AACA;AACA;AACA;AACA;;AACA,SACE,oBAAC,kBAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,YAAY,EAAC,WAFf;AAGE,IAAA,YAAY,EAAEI;AAHhB,KAIMD,IAJN,EADF;AAOD;;AAEDJ,cAAc,GAAGJ,KAAK,CAACc,UAAN,CAAiBV,cAAjB,CAAjB;AAEAA,cAAc,CAACW,SAAf,GAA2B;AACzB;;;AAGAL,EAAAA,KAAK,EAAER,SAAS,CAACc,MAJQ;;AAMzB;;;;AAIAT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UAVA;;AAYzB;;;AAGAC,EAAAA,gBAAgB,EAAEjB,SAAS,CAACc,MAfH;;AAiBzB;;;AAGAV,EAAAA,kBAAkB,EAAEJ,SAAS,CAACkB,WAAV,CAAsBF;AApBjB,CAA3B;AAuBAd,cAAc,CAACiB,YAAf,GAA8B;AAC5B;;;AAGAF,EAAAA,gBAAgB,EAAE,KAJU;;AAM5B;;;AAGAb,EAAAA,kBAAkB,EAAEH;AATQ,CAA9B;AAYA,eAAeC,cAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { TextInput } from 'react-native'\n\n/**\n * This is an _experimental_ React Native component.\n * Feedback thread: https://github.com/catamphetamine/react-phone-number-input/issues/296\n */\nfunction PhoneTextInput({\n  TextInputComponent,\n  onChange,\n  ...rest\n}, ref) {\n  // Instead of `onChangeText(value: string)` it could use\n  // `onChange(nativeEvent: Event)` and get `value` from `nativeEvent.text`.\n  const onChangeText = useCallback((value) => {\n    onChange({\n      preventDefault() { this.defaultPrevented = true },\n      target: { value }\n    })\n  }, [onChange])\n\n  // React Native `<TextInput/>` supports properties:\n  // * `placeholder: string?`\n  // * `autoFocus: boolean?`\n  // * `value: string?`\n  // plus the ones mentioned below:\n  return (\n    <TextInputComponent\n      ref={ref}\n      keyboardType=\"phone-pad\"\n      onChangeText={onChangeText}\n      {...rest}/>\n  )\n}\n\nPhoneTextInput = React.forwardRef(PhoneTextInput)\n\nPhoneTextInput.propTypes = {\n  /**\n   * The input field `value: string`.\n   */\n  value: PropTypes.string,\n\n  /**\n   * A function of `event: Event`.\n   * Updates the `value: string` property.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * The standard `autoCompleteType` property of a React Native `<TextInput/>`.\n   */\n  autoCompleteType: PropTypes.string,\n\n  /**\n   * The input field component.\n   */\n  TextInputComponent: PropTypes.elementType.isRequired\n}\n\nPhoneTextInput.defaultProps = {\n  /**\n   * Shows phone number suggestion(s) when the user focuses the input field.\n   */\n  autoCompleteType: 'tel',\n\n  /**\n   * By default, uses the default React Native `TextInput` component.\n   */\n  TextInputComponent: TextInput\n}\n\nexport default PhoneTextInput\n"],"file":"PhoneTextInput.js"}