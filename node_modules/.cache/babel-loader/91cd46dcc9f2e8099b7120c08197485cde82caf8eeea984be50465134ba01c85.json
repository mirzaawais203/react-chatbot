{"ast":null,"code":"import { isSupportedCountry } from 'libphonenumber-js/core';\nexport { getCountries } from 'libphonenumber-js/core';\n/**\n * Sorts country `<select/>` options.\n * Can move some country `<select/>` options\n * to the top of the list, for example.\n * @param  {object[]} countryOptions — Country `<select/>` options.\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\n * @return {object[]}\n */\n\nexport function sortCountryOptions(options, order) {\n  if (!order) {\n    return options;\n  }\n  var optionsOnTop = [];\n  var optionsOnBottom = [];\n  var appendTo = optionsOnTop;\n  for (var _iterator = order, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n    var element = _ref;\n    if (element === '|') {\n      appendTo.push({\n        divider: true\n      });\n    } else if (element === '...' || element === '…') {\n      appendTo = optionsOnBottom;\n    } else {\n      (function () {\n        var countryCode = void 0;\n        if (element === '🌐') {\n          countryCode = undefined;\n        } else {\n          countryCode = element;\n        } // Find the position of the option.\n\n        var index = options.indexOf(options.filter(function (option) {\n          return option.value === countryCode;\n        })[0]); // Get the option.\n\n        var option = options[index]; // Remove the option from its default position.\n\n        options.splice(index, 1); // Add the option on top.\n\n        appendTo.push(option);\n      })();\n    }\n  }\n  return optionsOnTop.concat(options).concat(optionsOnBottom);\n}\nexport function getSupportedCountryOptions(countryOptions, metadata) {\n  if (countryOptions) {\n    countryOptions = countryOptions.filter(function (option) {\n      switch (option) {\n        case '🌐':\n        case '|':\n        case '...':\n        case '…':\n          return true;\n        default:\n          return isCountrySupportedWithError(option, metadata);\n      }\n    });\n    if (countryOptions.length > 0) {\n      return countryOptions;\n    }\n  }\n}\nexport function isCountrySupportedWithError(country, metadata) {\n  if (isSupportedCountry(country, metadata)) {\n    return true;\n  } else {\n    console.error(\"Country not found: \".concat(country));\n    return false;\n  }\n}\nexport function getSupportedCountries(countries, metadata) {\n  if (countries) {\n    countries = countries.filter(function (country) {\n      return isCountrySupportedWithError(country, metadata);\n    });\n    if (countries.length === 0) {\n      countries = undefined;\n    }\n  }\n  return countries;\n}","map":{"version":3,"names":["isSupportedCountry","getCountries","sortCountryOptions","options","order","optionsOnTop","optionsOnBottom","appendTo","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","element","push","divider","countryCode","undefined","index","indexOf","filter","option","splice","concat","getSupportedCountryOptions","countryOptions","metadata","isCountrySupportedWithError","country","console","error","getSupportedCountries","countries"],"sources":["E:\\Hilighter\\chatbot\\node_modules\\react-phone-number-input-plus\\source\\helpers\\countries.js"],"sourcesContent":["import { isSupportedCountry } from 'libphonenumber-js/core'\nexport { getCountries } from 'libphonenumber-js/core'\n\n/**\n * Sorts country `<select/>` options.\n * Can move some country `<select/>` options\n * to the top of the list, for example.\n * @param  {object[]} countryOptions — Country `<select/>` options.\n * @param  {string[]} [countryOptionsOrder] — Country `<select/>` options order. Example: `[\"US\", \"CA\", \"AU\", \"|\", \"...\"]`.\n * @return {object[]}\n */\nexport function sortCountryOptions(options, order) {\n\tif (!order) {\n\t\treturn options\n\t}\n\tconst optionsOnTop = []\n\tconst optionsOnBottom = []\n\tlet appendTo = optionsOnTop\n\tfor (const element of order) {\n\t\tif (element === '|') {\n\t\t\tappendTo.push({ divider: true })\n\t\t} else if (element === '...' || element === '…') {\n\t\t\tappendTo = optionsOnBottom\n\t\t} else {\n\t\t\tlet countryCode\n\t\t\tif (element === '🌐') {\n\t\t\t\tcountryCode = undefined\n\t\t\t} else {\n\t\t\t\tcountryCode = element\n\t\t\t}\n\t\t\t// Find the position of the option.\n\t\t\tconst index = options.indexOf(options.filter(option => option.value === countryCode)[0])\n\t\t\t// Get the option.\n\t\t\tconst option = options[index]\n\t\t\t// Remove the option from its default position.\n\t\t\toptions.splice(index, 1)\n\t\t\t// Add the option on top.\n\t\t\tappendTo.push(option)\n\t\t}\n\t}\n\treturn optionsOnTop.concat(options).concat(optionsOnBottom)\n}\n\nexport function getSupportedCountryOptions(countryOptions, metadata) {\n\tif (countryOptions) {\n\t\tcountryOptions = countryOptions.filter((option) => {\n\t\t\tswitch (option) {\n\t\t\t\tcase '🌐':\n\t\t\t\tcase '|':\n\t\t\t\tcase '...':\n\t\t\t\tcase '…':\n\t\t\t\t\treturn true\n\t\t\t\tdefault:\n\t\t\t\t\treturn isCountrySupportedWithError(option, metadata)\n\t\t\t}\n\t\t})\n\t\tif (countryOptions.length > 0) {\n\t\t\treturn countryOptions\n\t\t}\n\t}\n}\n\nexport function isCountrySupportedWithError(country, metadata) {\n\tif (isSupportedCountry(country, metadata)) {\n\t\treturn true\n\t} else {\n\t\tconsole.error(`Country not found: ${country}`)\n\t\treturn false\n\t}\n}\n\nexport function getSupportedCountries(countries, metadata) {\n\tif (countries) {\n\t\tcountries = countries.filter(country => isCountrySupportedWithError(country, metadata))\n\t\tif (countries.length === 0) {\n\t\t\tcountries = undefined\n\t\t}\n\t}\n\treturn countries\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}