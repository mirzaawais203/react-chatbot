{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // Default country flag icon.\n// `<img/>` is wrapped in a `<div/>` to prevent SVGs from exploding in size in IE 11.\n// https://github.com/catamphetamine/react-phone-number-input/issues/111\n\nexport default function FlagComponent(_ref) {\n  var country = _ref.country,\n    countryName = _ref.countryName,\n    flags = _ref.flags,\n    flagUrl = _ref.flagUrl,\n    rest = _objectWithoutProperties(_ref, [\"country\", \"countryName\", \"flags\", \"flagUrl\"]);\n  if (flags && flags[country]) {\n    return flags[country]({\n      title: countryName\n    });\n  }\n  return React.createElement(\"img\", _extends({}, rest, {\n    alt: countryName,\n    role: countryName ? undefined : \"presentation\",\n    src: flagUrl.replace('{XX}', country).replace('{xx}', country.toLowerCase())\n  }));\n}\nFlagComponent.propTypes = {\n  // The country to be selected by default.\n  // Two-letter country code (\"ISO 3166-1 alpha-2\").\n  country: PropTypes.string.isRequired,\n  // Will be HTML `title` attribute of the `<img/>`.\n  countryName: PropTypes.string.isRequired,\n  // Country flag icon components.\n  // By default flag icons are inserted as `<img/>`s\n  // with their `src` pointed to `country-flag-icons` gitlab pages website.\n  // There might be cases (e.g. an offline application)\n  // where having a large (3 megabyte) `<svg/>` flags\n  // bundle is more appropriate.\n  // `import flags from 'react-phone-number-input/flags'`.\n  flags: PropTypes.objectOf(PropTypes.elementType),\n  // A URL for a country flag icon.\n  // By default it points to `country-flag-icons` gitlab pages website.\n  flagUrl: PropTypes.string.isRequired\n};","map":{"version":3,"names":["React","PropTypes","classNames","FlagComponent","_ref","country","countryName","flags","flagUrl","rest","_objectWithoutProperties","title","createElement","_extends","alt","role","undefined","src","replace","toLowerCase","propTypes","string","isRequired","objectOf","elementType"],"sources":["E:\\Hilighter\\chatbot\\node_modules\\react-phone-number-input-plus\\source\\Flag.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\n// Default country flag icon.\n// `<img/>` is wrapped in a `<div/>` to prevent SVGs from exploding in size in IE 11.\n// https://github.com/catamphetamine/react-phone-number-input/issues/111\nexport default function FlagComponent({\n\tcountry,\n\tcountryName,\n\tflags,\n\tflagUrl,\n\t...rest\n}) {\n\tif (flags && flags[country]) {\n\t\treturn flags[country]({ title: countryName })\n\t}\n\treturn (\n\t\t<img\n\t\t\t{...rest}\n\t\t\talt={countryName}\n\t\t\trole={countryName ? undefined : \"presentation\"}\n\t\t\tsrc={flagUrl.replace('{XX}', country).replace('{xx}', country.toLowerCase())}/>\n\t)\n}\n\nFlagComponent.propTypes = {\n\t// The country to be selected by default.\n\t// Two-letter country code (\"ISO 3166-1 alpha-2\").\n\tcountry: PropTypes.string.isRequired,\n\n\t// Will be HTML `title` attribute of the `<img/>`.\n\tcountryName: PropTypes.string.isRequired,\n\n\t// Country flag icon components.\n\t// By default flag icons are inserted as `<img/>`s\n\t// with their `src` pointed to `country-flag-icons` gitlab pages website.\n\t// There might be cases (e.g. an offline application)\n\t// where having a large (3 megabyte) `<svg/>` flags\n\t// bundle is more appropriate.\n\t// `import flags from 'react-phone-number-input/flags'`.\n\tflags: PropTypes.objectOf(PropTypes.elementType),\n\n\t// A URL for a country flag icon.\n\t// By default it points to `country-flag-icons` gitlab pages website.\n\tflagUrl: PropTypes.string.isRequired\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;AACA;AACA;;AACA,eAAe,SAASC,aAATA,CAAAC,IAAA,EAMZ;EAAA,IALFC,OAKE,GAAAD,IAAA,CALFC,OAKE;IAJFC,WAIE,GAAAF,IAAA,CAJFE,WAIE;IAHFC,KAGE,GAAAH,IAAA,CAHFG,KAGE;IAFFC,OAEE,GAAAJ,IAAA,CAFFI,OAEE;IADCC,IACD,GAAAC,wBAAA,CAAAN,IAAA;EACF,IAAIG,KAAK,IAAIA,KAAK,CAACF,OAAD,CAAlB,EAA6B;IAC5B,OAAOE,KAAK,CAACF,OAAD,CAAL,CAAe;MAAEM,KAAK,EAAEL;IAAT,CAAf,CAAP;EACA;EACD,OACCN,KAAA,CAAAY,aAAA,QAAAC,QAAA,KACKJ,IADL;IAECK,GAAG,EAAER,WAFN;IAGCS,IAAI,EAAET,WAAW,GAAGU,SAAH,GAAe,cAHjC;IAICC,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,MAAhB,EAAwBb,OAAxB,EAAiCa,OAAjC,CAAyC,MAAzC,EAAiDb,OAAO,CAACc,WAAR,EAAjD;EAJN,GADD;AAOA;AAEDhB,aAAa,CAACiB,SAAd,GAA0B;EACzB;EACA;EACAf,OAAO,EAAEJ,SAAS,CAACoB,MAAV,CAAiBC,UAHD;EAKzB;EACAhB,WAAW,EAAEL,SAAS,CAACoB,MAAV,CAAiBC,UANL;EAQzB;EACA;EACA;EACA;EACA;EACA;EACA;EACAf,KAAK,EAAEN,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,WAA7B,CAfkB;EAiBzB;EACA;EACAhB,OAAO,EAAEP,SAAS,CAACoB,MAAV,CAAiBC;AAnBD,CAA1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}