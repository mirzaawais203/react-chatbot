{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nexport default function CountrySelect(_ref) {\n  var value = _ref.value,\n    onChange = _ref.onChange,\n    options = _ref.options,\n    rest = _objectWithoutProperties(_ref, [\"value\", \"onChange\", \"options\"]);\n  var onChange_ = useCallback(function (event) {\n    var value = event.target.value;\n    onChange(value === 'ZZ' ? undefined : value);\n  }, [onChange]);\n  var selectedOption = useMemo(function () {\n    return getSelectedOption(options, value);\n  }, [options, value]); // \"ZZ\" means \"International\".\n  // (HTML requires each `<option/>` have some string `value`).\n\n  return React.createElement(\"select\", _extends({}, rest, {\n    value: value || 'ZZ',\n    onChange: onChange_\n  }), options.map(function (_ref2) {\n    var value = _ref2.value,\n      label = _ref2.label,\n      divider = _ref2.divider;\n    return React.createElement(\"option\", {\n      key: divider ? '|' : value || 'ZZ',\n      value: divider ? '|' : value || 'ZZ',\n      disabled: divider ? true : false,\n      style: divider ? DIVIDER_STYLE : undefined\n    }, label);\n  }));\n}\nCountrySelect.propTypes = {\n  /**\n   * A two-letter country code.\n   * Example: \"US\", \"RU\", etc.\n   */\n  value: PropTypes.string,\n  /**\n   * A function of `value: string`.\n   * Updates the `value` property.\n   */\n  onChange: PropTypes.func.isRequired,\n  // `<select/>` options.\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n    divider: PropTypes.bool\n  })).isRequired\n};\nvar DIVIDER_STYLE = {\n  fontSize: '1px',\n  backgroundColor: 'currentColor',\n  color: 'inherit'\n};\nexport function CountrySelectWithIcon(_ref3) {\n  var value = _ref3.value,\n    options = _ref3.options,\n    className = _ref3.className,\n    Icon = _ref3.iconComponent,\n    getIconAspectRatio = _ref3.getIconAspectRatio,\n    Arrow = _ref3.arrowComponent,\n    unicodeFlags = _ref3.unicodeFlags,\n    rest = _objectWithoutProperties(_ref3, [\"value\", \"options\", \"className\", \"iconComponent\", \"getIconAspectRatio\", \"arrowComponent\", \"unicodeFlags\"]);\n  var selectedOption = useMemo(function () {\n    return getSelectedOption(options, value);\n  }, [options, value]);\n  return React.createElement(\"div\", {\n    className: \"PhoneInputCountry\"\n  }, React.createElement(CountrySelect, _extends({}, rest, {\n    value: value,\n    options: options,\n    className: classNames('PhoneInputCountrySelect', className)\n  })), unicodeFlags && value && React.createElement(\"div\", {\n    className: \"PhoneInputCountryIconUnicode\"\n  }, getUnicodeFlagIcon(value)), !(unicodeFlags && value) && React.createElement(Icon, {\n    country: value,\n    label: selectedOption && selectedOption.label,\n    aspectRatio: unicodeFlags ? 1 : undefined\n  }), React.createElement(Arrow, null));\n}\nCountrySelectWithIcon.propTypes = {\n  // Country flag component.\n  iconComponent: PropTypes.elementType,\n  // Select arrow component.\n  arrowComponent: PropTypes.elementType.isRequired,\n  // Set to `true` to render Unicode flag icons instead of SVG images.\n  unicodeFlags: PropTypes.bool\n};\nCountrySelectWithIcon.defaultProps = {\n  arrowComponent: function arrowComponent() {\n    return React.createElement(\"div\", {\n      className: \"PhoneInputCountrySelectArrow\"\n    });\n  }\n};\nfunction getSelectedOption(options, value) {\n  for (var _iterator = options, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref4;\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref4 = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref4 = _i.value;\n    }\n    var option = _ref4;\n    if (!option.divider && option.value === value) {\n      return option;\n    }\n  }\n}","map":{"version":3,"names":["React","useCallback","useMemo","PropTypes","classNames","getUnicodeFlagIcon","CountrySelect","_ref","value","onChange","options","rest","_objectWithoutProperties","onChange_","event","target","undefined","selectedOption","getSelectedOption","createElement","_extends","map","_ref2","label","divider","key","disabled","style","DIVIDER_STYLE","propTypes","string","func","isRequired","arrayOf","shape","bool","fontSize","backgroundColor","color","CountrySelectWithIcon","_ref3","className","Icon","iconComponent","getIconAspectRatio","Arrow","arrowComponent","unicodeFlags","country","aspectRatio","elementType","defaultProps","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref4","length","next","done","option"],"sources":["E:\\Hilighter\\chatbot\\node_modules\\react-phone-number-input-plus\\source\\CountrySelect.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode'\n\nexport default function CountrySelect({\n\tvalue,\n\tonChange,\n\toptions,\n\t...rest\n}) {\n\tconst onChange_ = useCallback((event) => {\n\t\tconst value = event.target.value\n\t\tonChange(value === 'ZZ' ? undefined : value)\n\t}, [onChange])\n\n\tconst selectedOption = useMemo(() => {\n\t\treturn getSelectedOption(options, value)\n\t}, [options, value])\n\n\t// \"ZZ\" means \"International\".\n\t// (HTML requires each `<option/>` have some string `value`).\n\treturn (\n\t\t<select\n\t\t\t{...rest}\n\t\t\tvalue={value || 'ZZ'}\n\t\t\tonChange={onChange_}>\n\t\t\t{options.map(({ value, label, divider }) => (\n\t\t\t\t<option\n\t\t\t\t\tkey={divider ? '|' : value || 'ZZ'}\n\t\t\t\t\tvalue={divider ? '|' : value || 'ZZ'}\n\t\t\t\t\tdisabled={divider ? true : false}\n\t\t\t\t\tstyle={divider ? DIVIDER_STYLE : undefined}>\n\t\t\t\t\t{label}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t)\n}\n\nCountrySelect.propTypes = {\n\t/**\n\t * A two-letter country code.\n\t * Example: \"US\", \"RU\", etc.\n\t */\n\tvalue: PropTypes.string,\n\n\t/**\n\t * A function of `value: string`.\n\t * Updates the `value` property.\n\t */\n\tonChange: PropTypes.func.isRequired,\n\n\t// `<select/>` options.\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tvalue: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t\tdivider: PropTypes.bool\n\t})).isRequired\n}\n\nconst DIVIDER_STYLE = {\n\tfontSize: '1px',\n\tbackgroundColor: 'currentColor',\n\tcolor: 'inherit'\n}\n\nexport function CountrySelectWithIcon({\n\tvalue,\n\toptions,\n\tclassName,\n\ticonComponent: Icon,\n\tgetIconAspectRatio,\n\tarrowComponent: Arrow,\n\tunicodeFlags,\n\t...rest\n}) {\n\tconst selectedOption = useMemo(() => {\n\t\treturn getSelectedOption(options, value)\n\t}, [options, value])\n\n\treturn (\n\t\t<div className=\"PhoneInputCountry\">\n\t\t\t<CountrySelect\n\t\t\t\t{...rest}\n\t\t\t\tvalue={value}\n\t\t\t\toptions={options}\n\t\t\t\tclassName={classNames('PhoneInputCountrySelect', className)}/>\n\n\t\t\t{/* Either a Unicode flag icon. */}\n\t\t\t{(unicodeFlags && value) &&\n\t\t\t\t<div className=\"PhoneInputCountryIconUnicode\">\n\t\t\t\t\t{getUnicodeFlagIcon(value)}\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t{/* Or an SVG flag icon. */}\n\t\t\t{!(unicodeFlags && value) &&\n\t\t\t\t<Icon\n\t\t\t\t\tcountry={value}\n\t\t\t\t\tlabel={selectedOption && selectedOption.label}\n\t\t\t\t\taspectRatio={unicodeFlags ? 1 : undefined}/>\n\t\t\t}\n\n\t\t\t<Arrow/>\n\t\t</div>\n\t)\n}\n\nCountrySelectWithIcon.propTypes = {\n\t// Country flag component.\n\ticonComponent: PropTypes.elementType,\n\n\t// Select arrow component.\n\tarrowComponent: PropTypes.elementType.isRequired,\n\n\t// Set to `true` to render Unicode flag icons instead of SVG images.\n\tunicodeFlags: PropTypes.bool\n}\n\nCountrySelectWithIcon.defaultProps = {\n\tarrowComponent: () => <div className=\"PhoneInputCountrySelectArrow\"/>\n}\n\nfunction getSelectedOption(options, value) {\n\tfor (const option of options) {\n\t\tif (!option.divider && option.value === value) {\n\t\t\treturn option\n\t\t}\n\t}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}